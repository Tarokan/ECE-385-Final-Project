--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=12 LPM_WIDTH=4 data eq
--VERSION_BEGIN 15.0 cbx_cycloneii 2015:04:22:18:04:07:SJ cbx_lpm_add_sub 2015:04:22:18:04:07:SJ cbx_lpm_compare 2015:04:22:18:04:07:SJ cbx_lpm_decode 2015:04:22:18:04:08:SJ cbx_mgl 2015:04:22:18:06:50:SJ cbx_stratix 2015:04:22:18:04:08:SJ cbx_stratixii 2015:04:22:18:04:08:SJ  VERSION_END


-- Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, the Altera Quartus II License Agreement,
--  the Altera MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Altera and sold by Altera or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.



--synthesis_resources = lut 16 
SUBDESIGN decode_0aa
( 
	data[3..0]	:	input;
	eq[11..0]	:	output;
) 
VARIABLE 
	data_wire[2..0]	: WIRE;
	enable_wire1	: WIRE;
	enable_wire2	: WIRE;
	eq_node[11..0]	: WIRE;
	eq_wire1w[7..0]	: WIRE;
	eq_wire2w[7..0]	: WIRE;
	w_anode417w[3..0]	: WIRE;
	w_anode434w[3..0]	: WIRE;
	w_anode444w[3..0]	: WIRE;
	w_anode454w[3..0]	: WIRE;
	w_anode464w[3..0]	: WIRE;
	w_anode474w[3..0]	: WIRE;
	w_anode484w[3..0]	: WIRE;
	w_anode494w[3..0]	: WIRE;
	w_anode504w[3..0]	: WIRE;
	w_anode515w[3..0]	: WIRE;
	w_anode525w[3..0]	: WIRE;
	w_anode535w[3..0]	: WIRE;
	w_anode545w[3..0]	: WIRE;
	w_anode555w[3..0]	: WIRE;
	w_anode565w[3..0]	: WIRE;
	w_anode575w[3..0]	: WIRE;

BEGIN 
	data_wire[2..0] = data[2..0];
	enable_wire1 = (! data[3..3]);
	enable_wire2 = data[3..3];
	eq[] = eq_node[];
	eq_node[] = ( eq_wire2w[3..0], eq_wire1w[]);
	eq_wire1w[] = ( w_anode494w[3..3], w_anode484w[3..3], w_anode474w[3..3], w_anode464w[3..3], w_anode454w[3..3], w_anode444w[3..3], w_anode434w[3..3], w_anode417w[3..3]);
	eq_wire2w[] = ( w_anode575w[3..3], w_anode565w[3..3], w_anode555w[3..3], w_anode545w[3..3], w_anode535w[3..3], w_anode525w[3..3], w_anode515w[3..3], w_anode504w[3..3]);
	w_anode417w[] = ( (w_anode417w[2..2] & (! data_wire[2..2])), (w_anode417w[1..1] & (! data_wire[1..1])), (w_anode417w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode434w[] = ( (w_anode434w[2..2] & (! data_wire[2..2])), (w_anode434w[1..1] & (! data_wire[1..1])), (w_anode434w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode444w[] = ( (w_anode444w[2..2] & (! data_wire[2..2])), (w_anode444w[1..1] & data_wire[1..1]), (w_anode444w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode454w[] = ( (w_anode454w[2..2] & (! data_wire[2..2])), (w_anode454w[1..1] & data_wire[1..1]), (w_anode454w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode464w[] = ( (w_anode464w[2..2] & data_wire[2..2]), (w_anode464w[1..1] & (! data_wire[1..1])), (w_anode464w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode474w[] = ( (w_anode474w[2..2] & data_wire[2..2]), (w_anode474w[1..1] & (! data_wire[1..1])), (w_anode474w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode484w[] = ( (w_anode484w[2..2] & data_wire[2..2]), (w_anode484w[1..1] & data_wire[1..1]), (w_anode484w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode494w[] = ( (w_anode494w[2..2] & data_wire[2..2]), (w_anode494w[1..1] & data_wire[1..1]), (w_anode494w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode504w[] = ( (w_anode504w[2..2] & (! data_wire[2..2])), (w_anode504w[1..1] & (! data_wire[1..1])), (w_anode504w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode515w[] = ( (w_anode515w[2..2] & (! data_wire[2..2])), (w_anode515w[1..1] & (! data_wire[1..1])), (w_anode515w[0..0] & data_wire[0..0]), enable_wire2);
	w_anode525w[] = ( (w_anode525w[2..2] & (! data_wire[2..2])), (w_anode525w[1..1] & data_wire[1..1]), (w_anode525w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode535w[] = ( (w_anode535w[2..2] & (! data_wire[2..2])), (w_anode535w[1..1] & data_wire[1..1]), (w_anode535w[0..0] & data_wire[0..0]), enable_wire2);
	w_anode545w[] = ( (w_anode545w[2..2] & data_wire[2..2]), (w_anode545w[1..1] & (! data_wire[1..1])), (w_anode545w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode555w[] = ( (w_anode555w[2..2] & data_wire[2..2]), (w_anode555w[1..1] & (! data_wire[1..1])), (w_anode555w[0..0] & data_wire[0..0]), enable_wire2);
	w_anode565w[] = ( (w_anode565w[2..2] & data_wire[2..2]), (w_anode565w[1..1] & data_wire[1..1]), (w_anode565w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode575w[] = ( (w_anode575w[2..2] & data_wire[2..2]), (w_anode575w[1..1] & data_wire[1..1]), (w_anode575w[0..0] & data_wire[0..0]), enable_wire2);
END;
--VALID FILE
