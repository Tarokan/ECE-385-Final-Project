--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=11 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 15.0 cbx_cycloneii 2015:04:22:18:04:07:SJ cbx_lpm_add_sub 2015:04:22:18:04:07:SJ cbx_lpm_compare 2015:04:22:18:04:07:SJ cbx_lpm_decode 2015:04:22:18:04:08:SJ cbx_mgl 2015:04:22:18:06:50:SJ cbx_stratix 2015:04:22:18:04:08:SJ cbx_stratixii 2015:04:22:18:04:08:SJ  VERSION_END


-- Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, the Altera Quartus II License Agreement,
--  the Altera MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Altera and sold by Altera or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_6ua
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[10..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[10..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode743w[1..0]	: WIRE;
	w_anode752w[3..0]	: WIRE;
	w_anode769w[3..0]	: WIRE;
	w_anode779w[3..0]	: WIRE;
	w_anode789w[3..0]	: WIRE;
	w_anode799w[3..0]	: WIRE;
	w_anode809w[3..0]	: WIRE;
	w_anode819w[3..0]	: WIRE;
	w_anode829w[3..0]	: WIRE;
	w_anode841w[1..0]	: WIRE;
	w_anode848w[3..0]	: WIRE;
	w_anode859w[3..0]	: WIRE;
	w_anode869w[3..0]	: WIRE;
	w_anode879w[3..0]	: WIRE;
	w_anode889w[3..0]	: WIRE;
	w_anode899w[3..0]	: WIRE;
	w_anode909w[3..0]	: WIRE;
	w_anode919w[3..0]	: WIRE;
	w_data741w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[10..0] = eq_wire[10..0];
	eq_wire[] = ( ( w_anode919w[3..3], w_anode909w[3..3], w_anode899w[3..3], w_anode889w[3..3], w_anode879w[3..3], w_anode869w[3..3], w_anode859w[3..3], w_anode848w[3..3]), ( w_anode829w[3..3], w_anode819w[3..3], w_anode809w[3..3], w_anode799w[3..3], w_anode789w[3..3], w_anode779w[3..3], w_anode769w[3..3], w_anode752w[3..3]));
	w_anode743w[] = ( (w_anode743w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode752w[] = ( (w_anode752w[2..2] & (! w_data741w[2..2])), (w_anode752w[1..1] & (! w_data741w[1..1])), (w_anode752w[0..0] & (! w_data741w[0..0])), w_anode743w[1..1]);
	w_anode769w[] = ( (w_anode769w[2..2] & (! w_data741w[2..2])), (w_anode769w[1..1] & (! w_data741w[1..1])), (w_anode769w[0..0] & w_data741w[0..0]), w_anode743w[1..1]);
	w_anode779w[] = ( (w_anode779w[2..2] & (! w_data741w[2..2])), (w_anode779w[1..1] & w_data741w[1..1]), (w_anode779w[0..0] & (! w_data741w[0..0])), w_anode743w[1..1]);
	w_anode789w[] = ( (w_anode789w[2..2] & (! w_data741w[2..2])), (w_anode789w[1..1] & w_data741w[1..1]), (w_anode789w[0..0] & w_data741w[0..0]), w_anode743w[1..1]);
	w_anode799w[] = ( (w_anode799w[2..2] & w_data741w[2..2]), (w_anode799w[1..1] & (! w_data741w[1..1])), (w_anode799w[0..0] & (! w_data741w[0..0])), w_anode743w[1..1]);
	w_anode809w[] = ( (w_anode809w[2..2] & w_data741w[2..2]), (w_anode809w[1..1] & (! w_data741w[1..1])), (w_anode809w[0..0] & w_data741w[0..0]), w_anode743w[1..1]);
	w_anode819w[] = ( (w_anode819w[2..2] & w_data741w[2..2]), (w_anode819w[1..1] & w_data741w[1..1]), (w_anode819w[0..0] & (! w_data741w[0..0])), w_anode743w[1..1]);
	w_anode829w[] = ( (w_anode829w[2..2] & w_data741w[2..2]), (w_anode829w[1..1] & w_data741w[1..1]), (w_anode829w[0..0] & w_data741w[0..0]), w_anode743w[1..1]);
	w_anode841w[] = ( (w_anode841w[0..0] & data_wire[3..3]), enable_wire);
	w_anode848w[] = ( (w_anode848w[2..2] & (! w_data741w[2..2])), (w_anode848w[1..1] & (! w_data741w[1..1])), (w_anode848w[0..0] & (! w_data741w[0..0])), w_anode841w[1..1]);
	w_anode859w[] = ( (w_anode859w[2..2] & (! w_data741w[2..2])), (w_anode859w[1..1] & (! w_data741w[1..1])), (w_anode859w[0..0] & w_data741w[0..0]), w_anode841w[1..1]);
	w_anode869w[] = ( (w_anode869w[2..2] & (! w_data741w[2..2])), (w_anode869w[1..1] & w_data741w[1..1]), (w_anode869w[0..0] & (! w_data741w[0..0])), w_anode841w[1..1]);
	w_anode879w[] = ( (w_anode879w[2..2] & (! w_data741w[2..2])), (w_anode879w[1..1] & w_data741w[1..1]), (w_anode879w[0..0] & w_data741w[0..0]), w_anode841w[1..1]);
	w_anode889w[] = ( (w_anode889w[2..2] & w_data741w[2..2]), (w_anode889w[1..1] & (! w_data741w[1..1])), (w_anode889w[0..0] & (! w_data741w[0..0])), w_anode841w[1..1]);
	w_anode899w[] = ( (w_anode899w[2..2] & w_data741w[2..2]), (w_anode899w[1..1] & (! w_data741w[1..1])), (w_anode899w[0..0] & w_data741w[0..0]), w_anode841w[1..1]);
	w_anode909w[] = ( (w_anode909w[2..2] & w_data741w[2..2]), (w_anode909w[1..1] & w_data741w[1..1]), (w_anode909w[0..0] & (! w_data741w[0..0])), w_anode841w[1..1]);
	w_anode919w[] = ( (w_anode919w[2..2] & w_data741w[2..2]), (w_anode919w[1..1] & w_data741w[1..1]), (w_anode919w[0..0] & w_data741w[0..0]), w_anode841w[1..1]);
	w_data741w[2..0] = data_wire[2..0];
END;
--VALID FILE
